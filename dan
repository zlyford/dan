#!/usr/bin/python

# for some reason numpy is not installed for python 3 on the CCIS machines...
import sys
import wave
import array
import os

import numpy

DEBUG = False


# Returns the short name of the file
def get_short_name(path):
    return os.path.basename(os.path.normpath(path))


# Main function for comparing two audio files
def compare(path1, path2):
    file1 = open_file(path1)
    file2 = open_file(path2)
    file1_info = file1.getparams()
    file2_info = file2.getparams()
    if(DEBUG):
        print("File Info:")
        print("File 1: " + str(file1_info))
        print("File 2: " + str(file2_info))
    nframes1 = file1_info[3]
    nframes2 = file2_info[3]
    # reads the wave file data
    byte_string1 = file1.readframes(nframes1)
    byte_string2 = file2.readframes(nframes2)
    # convert that into an array of ints
    a1 = array.array('h', byte_string1)
    a2 = array.array('h', byte_string2)
    # find the correlation matrix between them
    if len(a1) == len(a2):
        corr = numpy.corrcoef(a1, a2)
        # if the files are pretty similar, return match, otherwise no match
        if corr[0][1] > 0.9:
            path1 = get_short_name(path1)
            path2 = get_short_name(path2)
            print("MATCH " + path1 + " " + path2)
        else:
            print("NO MATCH ")

    # close the files
    file1.close()
    file2.close()


# opens the audio file at the given location
def open_file(path):
    try:
        audio = wave.open(path)
    except:  # TODO: better exception handling
        sys.stderr.write('ERROR: ' + path + ' is not a supported format\n')
        sys.exit(-1)
    return audio


# Parse arguments
if __name__ == '__main__':
    if (len(sys.argv) != 5) or (sys.argv[1] != '-f') or (sys.argv[3] != '-f'):
        sys.stderr.write('ERROR: incorrect command line\n')
        sys.exit(-1)
    else:
        compare(sys.argv[2], sys.argv[4])
        sys.exit(0)
