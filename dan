#!/usr/bin/python

# for some reason numpy is not installed for python 3 on the CCIS machines...
import sys
import wave
import array
import os
import subprocess

import numpy


# List of acceptable command "flags"
flags = ['-f', '-d']

# lame executable location
lame = os.path.normpath('/course/cs4500f14/bin/lame')

# Returns the short name of the file
def get_short_name(path):
    return os.path.basename(os.path.normpath(path))


# process file for comparison; returns array of ints of the wave file samples
def process_file(path):
    f = open_file(path)
    f_info = f.getparams()
    nframes = f_info[3]
    # reads the wave file data
    byte_string = f.readframes(nframes)
    f.close()
    # convert that into an array of ints
    return array.array('h', byte_string)


# Main function for comparing two audio files or directories
def compare(path1, path2):
    a1 = process_file(path1)
    a2 = process_file(path2)
    # find the correlation matrix between them
    if len(a1) == len(a2):
        corr = numpy.corrcoef(a1, a2)
        # if the files are pretty similar, return match, otherwise no match
        if corr[0][1] > 0.9:
            path1 = get_short_name(path1)
            path2 = get_short_name(path2)
            print("MATCH " + path1 + " " + path2)
        else:
            print("NO MATCH ")


# opens the audio file at the given location
def open_file(path):
    temp_path = os.path.normpath('/tmp/file1.wav')
    try:
        audio = wave.open(path)
    except Exception as e:  # it's probably an mp3, so convert it to a temp wav file
        try:
            subprocess.check_call([lame, '--decode', '--quiet', '--mp3input', path, temp_path])
        except Exception:
            sys.stderr.write('ERROR: unsupported format\n')
            sys.exit(-1)
        try:
            audio = wave.open(temp_path)
        except:
            sys.stderr.write('ERROR: could not open file\n')
            sys.exit(-1)
    return audio


# Parse arguments
if __name__ == '__main__':
    if (len(sys.argv) != 5) or (sys.argv[1] and sys.argv[3] not in flags):
        sys.stderr.write('ERROR: incorrect command line\n')
        sys.exit(-1)
    elif sys.argv[1] == '-f' and sys.argv[3] == '-f':  # both are files
        compare(sys.argv[2], sys.argv[4])
        sys.exit(0)
    elif sys.argv[1] == '-f' and sys.argv[3] == '-d':  # first is file, second is directory
        try:
            file_list = os.listdir(sys.argv[4])
        except OSError:
            sys.stderr.write('ERROR: invalid directory\n')
            sys.exit(-1)
        for f in file_list:
            f = sys.argv[4] + '\\' + f
            compare(sys.argv[2], f)
