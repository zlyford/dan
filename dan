#!/usr/bin/python

# for some reason numpy is not installed for python 3 on the CCIS machines...
import sys
import wave
import array
import os

import numpy


# Returns the short name of the file
def get_short_name(path):
    return os.path.basename(os.path.normpath(path))


# process file for comparison; returns array of ints of the wave file samples
def process_file(path):
    f = open_file(path)
    f_info = f.getparams()
    nframes = f_info[3]
    # reads the wave file data
    byte_string = f.readframes(nframes)
    f.close()
    # convert that into an array of ints
    return array.array('h', byte_string)


# Main function for comparing two audio files
def compare(path1, path2):
    a1 = process_file(path1)
    a2 = process_file(path2)
    # find the correlation matrix between them
    if len(a1) == len(a2):
        corr = numpy.corrcoef(a1, a2)
        # if the files are pretty similar, return match, otherwise no match
        if corr[0][1] > 0.9:
            path1 = get_short_name(path1)
            path2 = get_short_name(path2)
            print("MATCH " + path1 + " " + path2)
        else:
            print("NO MATCH")
    else:
        print("NO MATCH")


# opens the audio file at the given location
def open_file(path):
    if(path.split('.')[-1] == "wav"):
        try:
            audio = wave.open(path)
    	except:  # file could not be opened
            sys.stderr.write('ERROR: ' + path + ' could not be opened\n')
            sys.exit(-1)
    else:  # not a '.wav' file
        sys.stderr.write('ERROR: ' + path + ' is not a supported format\n')
        sys.exit(-1)
    return audio


# Parse arguments
if __name__ == '__main__':
    if (len(sys.argv) != 5) or (sys.argv[1] != '-f') or (sys.argv[3] != '-f'):
        sys.stderr.write('ERROR: incorrect command line\n')
        sys.exit(-1)
    else:
        compare(sys.argv[2], sys.argv[4])
        sys.exit(0)
